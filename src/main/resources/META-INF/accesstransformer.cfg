# Used for log stripping, block burning and potion brewing, in Risus.java, under commonSetup
public-f net.minecraft.world.item.AxeItem STRIPPABLES
public net.minecraft.world.level.block.FireBlock setFlammable(Lnet/minecraft/world/level/block/Block;II)V
public net.minecraft.world.entity.Entity collide(Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; # collide

# Used for properly creating joy drip particles in JoyParticle.java
public net.minecraft.client.particle.DripParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/material/Fluid;)V # <init>
public net.minecraft.client.particle.DripParticle$DripHangParticle
public net.minecraft.client.particle.DripParticle$FallAndLandParticle
public net.minecraft.client.particle.DripParticle$DripLandParticle
public net.minecraft.client.particle.DripParticle$DripHangParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/particles/ParticleOptions;)V # <init>
public net.minecraft.client.particle.DripParticle$FallAndLandParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/particles/ParticleOptions;)V # <init>
public net.minecraft.client.particle.DripParticle$DripLandParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDLnet/minecraft/world/level/material/Fluid;)V # <init>

public net.minecraft.client.gui.Gui healthBlinkTime # healthBlinkTime
public net.minecraft.client.gui.Gui lastHealth # lastHealth
public net.minecraft.client.gui.Gui lastHealthTime # lastHealthTime
public net.minecraft.client.gui.Gui displayHealth # displayHealth
public net.minecraft.client.gui.Gui random # random
public net.minecraft.client.gui.Gui$HeartType
public net.minecraft.client.gui.Gui$HeartType forPlayer(Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/client/gui/Gui$HeartType; # forPlayer

public net.minecraft.client.particle.CritParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)V # <init>
public net.minecraft.world.level.block.CampfireBlock isSmokeSource(Lnet/minecraft/world/level/block/state/BlockState;)Z # isSmokeSource
public net.minecraft.world.level.block.StairBlock getStairsShape(Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/properties/StairsShape; # getStairsShape
public net.minecraft.world.level.block.WallBlock applyWallShape(Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/properties/WallSide;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; # applyWallShape
public net.minecraft.world.level.block.WallBlock updateShape(Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZZZ)Lnet/minecraft/world/level/block/state/BlockState; # updateShape
public net.minecraft.world.level.block.WallBlock sideUpdate(Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; # sideUpdate
public net.minecraft.world.level.block.WallBlock topUpdate(Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; # topUpdate
public net.minecraft.world.level.block.WallBlock makeShapes(FFFFFF)Ljava/util/Map; # makeShapes

# BiomeGrassColors and FoliageColorHandler (gets biome noise values for blending colors together)
public net.minecraft.world.level.biome.Biome TEMPERATURE_NOISE
